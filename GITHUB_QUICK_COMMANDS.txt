╔════════════════════════════════════════════════════════════════════════════════╗
║                                                                                ║
║                  GITHUB UPLOAD - UBUNTU TERMINAL QUICK GUIDE                  ║
║                                For Absolute Beginners                          ║
║                                                                                ║
╚════════════════════════════════════════════════════════════════════════════════╝

────────────────────────────────────────────────────────────────────────────────
STEP 0: PREREQUISITES - Configure Git (ONE TIME ONLY)
────────────────────────────────────────────────────────────────────────────────

Open your terminal and run these commands (replace with your info):

$ git config --global user.name "Your Full Name"
$ git config --global user.email "your.email@gmail.com"

EXAMPLE:
$ git config --global user.name "Ahmed Ali"
$ git config --global user.email "ahmed.ali@gmail.com"

✓ This tells Git who you are
✓ You only do this ONE time on your computer

────────────────────────────────────────────────────────────────────────────────
STEP 1: CREATE A FOLDER FOR YOUR PROJECT
────────────────────────────────────────────────────────────────────────────────

$ mkdir embedded-c-learning
$ cd embedded-c-learning

EXPLANATION:
mkdir   = Make Directory (create folder)
cd      = Change Directory (enter folder)

VERIFY:
$ pwd
Output: /home/username/embedded-c-learning

────────────────────────────────────────────────────────────────────────────────
STEP 2: COPY ALL LEARNING FILES TO YOUR FOLDER
────────────────────────────────────────────────────────────────────────────────

$ cp /mnt/user-data/outputs/*.c .
$ cp /mnt/user-data/outputs/*.txt .
$ cp /mnt/user-data/outputs/*.md .

EXPLANATION:
cp      = Copy files
*       = All files matching pattern
.       = Current directory (your project folder)

VERIFY FILES ARE HERE:
$ ls -la

You should see:
  01_hello_embedded.c
  02_pointers_arrays.c
  03_structs_bitfields.c
  04_practical_tasks.c
  05_functions_modularity.c
  C_EMBEDDED_GUIDE.txt
  CHEAT_SHEET.txt
  PACKAGE_OVERVIEW.txt
  README.txt
  GITHUB_UPLOAD_GUIDE.md

────────────────────────────────────────────────────────────────────────────────
STEP 3: CREATE .gitignore FILE (TELLS GIT WHAT TO IGNORE)
────────────────────────────────────────────────────────────────────────────────

Create a file called .gitignore:

$ cat > .gitignore << 'EOF'
# Compiled programs
01_hello_embedded
02_pointers_arrays
03_structs_bitfields
04_practical_tasks
05_functions_modularity

# Object files
*.o
*.obj

# Executables
*.exe
*.out
*.app

# Debug files
*.dSYM/
*.su
*.gch

# IDE files
.vscode/
.idea/
*.swp
*.swo

# Operating system
.DS_Store
Thumbs.db
EOF

WHAT THIS DOES:
✓ Tells Git to NOT upload compiled programs
✓ Keeps your repo clean and small
✓ Only uploads source code (.c files)

────────────────────────────────────────────────────────────────────────────────
STEP 4: INITIALIZE GIT REPOSITORY
────────────────────────────────────────────────────────────────────────────────

$ git init

OUTPUT:
Initialized empty Git repository in /home/username/embedded-c-learning/.git/

VERIFY:
$ ls -la

You should now see a hidden .git folder

────────────────────────────────────────────────────────────────────────────────
STEP 5: ADD ALL FILES TO GIT TRACKING
────────────────────────────────────────────────────────────────────────────────

$ git add .

EXPLANATION:
add     = Tell Git to track these files
.       = All files in current directory

VERIFY:
$ git status

Output should show all files in green with "new file:"

────────────────────────────────────────────────────────────────────────────────
STEP 6: CREATE YOUR FIRST COMMIT (SAVE POINT)
────────────────────────────────────────────────────────────────────────────────

$ git commit -m "Initial commit: Add C embedded systems learning materials"

OUTPUT:
[main (root-commit) abc1234] Initial commit: Add C embedded systems...
 15 files changed, 12000 insertions(+)
 create mode 100644 .gitignore
 create mode 100644 01_hello_embedded.c
 ...

WHAT IS A COMMIT?
✓ A snapshot of your files at this moment
✓ Like a save point in a video game
✓ The -m flag adds a message describing what you did

────────────────────────────────────────────────────────────────────────────────
STEP 7: CREATE REPOSITORY ON GITHUB WEBSITE
────────────────────────────────────────────────────────────────────────────────

OPEN BROWSER and go to: https://github.com

1. Click the "+" icon (top right)
2. Select "New repository"
3. Enter name: embedded-c-learning
4. Add description: C programming for embedded systems
5. Choose "Public" (for portfolio)
6. ✓ Check "Add a README file"
7. Select .gitignore: "C"
8. Click "Create repository"

AFTER CREATION:
1. Click green "<> Code" button
2. Copy the HTTPS URL

EXAMPLE URL:
https://github.com/yourname123/embedded-c-learning.git

────────────────────────────────────────────────────────────────────────────────
STEP 8: CONNECT YOUR LOCAL FOLDER TO GITHUB
────────────────────────────────────────────────────────────────────────────────

$ git remote add origin https://github.com/YOUR-USERNAME/embedded-c-learning.git

REPLACE "YOUR-USERNAME" with your actual GitHub username!

EXAMPLE:
$ git remote add origin https://github.com/ahmed123/embedded-c-learning.git

VERIFY:
$ git remote -v

Output should show:
origin  https://github.com/YOUR-USERNAME/embedded-c-learning.git (fetch)
origin  https://github.com/YOUR-USERNAME/embedded-c-learning.git (push)

────────────────────────────────────────────────────────────────────────────────
STEP 9: UPLOAD YOUR FILES TO GITHUB
────────────────────────────────────────────────────────────────────────────────

$ git branch -M main
$ git push -u origin main

EXPLANATION:
branch -M main  = Rename to "main" (GitHub standard)
push            = Upload files to GitHub
-u origin main  = Set this as default

FIRST TIME:
May ask for authentication. Choose one:

OPTION A: GitHub Personal Access Token (RECOMMENDED)
1. Go to: https://github.com/settings/tokens
2. Click "Generate new token" → "Generate new token (classic)"
3. Name: "Git Ubuntu"
4. Check ☑️ "repo"
5. Click "Generate token"
6. Copy the token (shows once!)
7. Paste when terminal asks for password

OPTION B: GitHub CLI (if installed)
Terminal might automatically open GitHub authentication

────────────────────────────────────────────────────────────────────────────────
STEP 10: VERIFY UPLOAD SUCCESS
────────────────────────────────────────────────────────────────────────────────

ON TERMINAL:
$ git log

OUTPUT should show your commit:
commit abc123...
Author: Your Name <your.email@gmail.com>
Date:   Sat Oct 24 12:00:00 2025

    Initial commit: Add C embedded systems learning materials

ON GITHUB WEBSITE:
1. Go to: https://github.com/YOUR-USERNAME/embedded-c-learning
2. You should see all your files!
3. Click on files to view them
4. You can see the commit history

✅ YOU'RE DONE!

════════════════════════════════════════════════════════════════════════════════
                           ALL IN ONE CODE BLOCK
════════════════════════════════════════════════════════════════════════════════

Copy and paste this entire block (but change the values):

────────────────────────────────────────────────────────────────────────────────
BEFORE RUNNING - EDIT THESE VALUES:
────────────────────────────────────────────────────────────────────────────────

YOUR_NAME="Ahmed Ali"
YOUR_EMAIL="ahmed.ali@gmail.com"
YOUR_GITHUB_URL="https://github.com/ahmedali123/embedded-c-learning.git"

────────────────────────────────────────────────────────────────────────────────
NOW RUN THESE COMMANDS:
────────────────────────────────────────────────────────────────────────────────

# Configure Git
git config --global user.name "$YOUR_NAME"
git config --global user.email "$YOUR_EMAIL"

# Create project folder
mkdir embedded-c-learning
cd embedded-c-learning

# Copy all files
cp /mnt/user-data/outputs/*.c .
cp /mnt/user-data/outputs/*.txt .
cp /mnt/user-data/outputs/*.md .

# Create .gitignore
cat > .gitignore << 'EOF'
*.o
*.obj
*.exe
*.out
01_hello_embedded
02_pointers_arrays
03_structs_bitfields
04_practical_tasks
05_functions_modularity
.vscode/
.idea/
.DS_Store
EOF

# Initialize Git
git init
git add .
git commit -m "Initial commit: C embedded systems learning materials"

# Connect to GitHub
git remote add origin $YOUR_GITHUB_URL
git branch -M main

# Upload to GitHub
git push -u origin main

# Verify
git log

────────────────────────────────────────────────────────────────────────────────

════════════════════════════════════════════════════════════════════════════════
                          AFTER FIRST UPLOAD
════════════════════════════════════════════════════════════════════════════════

EVERY TIME YOU WANT TO UPDATE:

1. Make changes to files
2. Add changes:
   $ git add .

3. Create commit:
   $ git commit -m "Describe what you changed"

4. Upload:
   $ git push

EXAMPLE:
$ git add .
$ git commit -m "Add new temperature sensor driver example"
$ git push

════════════════════════════════════════════════════════════════════════════════
                            COMMON COMMANDS
════════════════════════════════════════════════════════════════════════════════

CHECK STATUS:
$ git status
(shows what files changed)

VIEW HISTORY:
$ git log
(shows all commits)

VIEW WHAT CHANGED:
$ git diff
(shows line-by-line changes)

GO BACK TO LAST COMMIT:
$ git checkout -- .
(undoes all changes - careful!)

STOP TRACKING A FILE:
$ git rm --cached filename.c
(keeps file but removes from Git)

════════════════════════════════════════════════════════════════════════════════
                         TROUBLESHOOTING
════════════════════════════════════════════════════════════════════════════════

❌ ERROR: "fatal: not a git repository"
✅ FIX: Make sure you're in your project folder
   $ cd embedded-c-learning
   $ ls -la
   (should show .git folder)

────────────────────────────────────────────────────────────────────────────────

❌ ERROR: "Please tell me who you are"
✅ FIX: Configure Git
   $ git config --global user.name "Your Name"
   $ git config --global user.email "your.email@gmail.com"

────────────────────────────────────────────────────────────────────────────────

❌ ERROR: "fatal: remote origin already exists"
✅ FIX: You already added remote, just push
   $ git push -u origin main

────────────────────────────────────────────────────────────────────────────────

❌ ERROR: "Permission denied (publickey)"
✅ FIX: Use HTTPS instead of SSH
   $ git remote set-url origin https://github.com/USERNAME/repo.git

────────────────────────────────────────────────────────────────────────────────

❌ ERROR: Files don't upload / "Nothing to commit"
✅ FIX: Add files first
   $ git add .
   $ git status
   (check if files are green)
   $ git commit -m "message"
   $ git push

════════════════════════════════════════════════════════════════════════════════
                         YOU'VE GOT THIS! 🚀
════════════════════════════════════════════════════════════════════════════════

After uploading:
✓ Your code is safe on GitHub
✓ You have version history
✓ It's part of your portfolio
✓ Others can learn from your work
✓ You can update it anytime

Next steps:
1. Share the link: https://github.com/YOUR-USERNAME/embedded-c-learning
2. Add a nice README.md
3. Keep adding more programs as you learn
4. Build your portfolio!

════════════════════════════════════════════════════════════════════════════════
